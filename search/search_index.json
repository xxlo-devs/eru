{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"eru What is this project about Eru is aimed to help our fellow students from XX-LO in Gda\u0144sk, Poland. We want to enable school to easily inform all interested students about all teacher substitutions they might want to know about ;) Contributions You want to help? Feel free to! Simply create an issue for idea for a solution you want to have/ problem you've encountered and either wait for one of our developers to fix it or get aboard and join us! We can't guarantee that code review will be painless though.","title":"Home"},{"location":"#eru","text":"","title":"eru"},{"location":"#what-is-this-project-about","text":"Eru is aimed to help our fellow students from XX-LO in Gda\u0144sk, Poland. We want to enable school to easily inform all interested students about all teacher substitutions they might want to know about ;)","title":"What is this project about"},{"location":"#contributions","text":"You want to help? Feel free to! Simply create an issue for idea for a solution you want to have/ problem you've encountered and either wait for one of our developers to fix it or get aboard and join us! We can't guarantee that code review will be painless though.","title":"Contributions"},{"location":"build-from-source/","text":"Build from source If you don't want to use docker, you unfortunately need to deploy from source code. Download source code Our source code is available for free (MIT License) in our repo . The source code you can download either via this link (.zip archive) or by running git clone https://github.com/xxlo-dev/eru in your system (installed git is required). Obtain Dotnet Core SDK Download Dotnet Core SDK 3.1 from here and install it. Configure your application See here to see all required and additional configuration \ud83d\udc4d. Run application Simply run dotnet run -c Release -p src/eru.WebApp in folder with source code. SDK will compile and run our application effortlessly.","title":"Build from source"},{"location":"build-from-source/#build-from-source","text":"If you don't want to use docker, you unfortunately need to deploy from source code.","title":"Build from source"},{"location":"build-from-source/#download-source-code","text":"Our source code is available for free (MIT License) in our repo . The source code you can download either via this link (.zip archive) or by running git clone https://github.com/xxlo-dev/eru in your system (installed git is required).","title":"Download source code"},{"location":"build-from-source/#obtain-dotnet-core-sdk","text":"Download Dotnet Core SDK 3.1 from here and install it.","title":"Obtain Dotnet Core SDK"},{"location":"build-from-source/#configure-your-application","text":"See here to see all required and additional configuration \ud83d\udc4d.","title":"Configure your application"},{"location":"build-from-source/#run-application","text":"Simply run dotnet run -c Release -p src/eru.WebApp in folder with source code. SDK will compile and run our application effortlessly.","title":"Run application"},{"location":"config/","text":"Config Application configuration can be handled via many ways described here . Most common way to do it is via appsettings.json file available in src/eru.WebApp and it is our most recommended way of doing it. Sample appsettings.json { \"Serilog\" : { \"Using\" : [\"Serilog.Sinks.Console\", \"Serilog.Sinks.File\", \"Serilog.Sinks.Seq\"], \"MinimumLevel\" : { \"Default\": \"Information\" }, \"WriteTo\": [ {\"Name\" : \"Console\"}, {\"Name\" : \"File\", \"Args\" : {\"path\" : \"../Logs/log.txt\", \"rollingInterval\" : \"Day\"}}, {\"Name\" : \"Seq\", \"Args\" : {\"serverUrl\" : \"http://localhost:5341/\"}} ], \"Enrich\" : [\"FromLogContext\"] }, \"AllowedHosts\": \"*\", \"Database\": { \"AutomaticallyMigrate\": true, \"ConnectionString\": \"Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase;\" }, \"UploadKey\": \"V3ryS3cureUpl0adK3y\", \"CultureSettings\": { \"AvailableCultures\": [\"pl\", \"en\"], \"DefaultCulture\": \"pl\" }, \"Admins\" : [ { \"Username\" : \"admin\", \"Password\" : \"s@mpl3P@ssword\" } ], \"Paths\": { \"WebAppPathBase\": \"/\", \"SeqUiPath\": \"http://localhost:5341/\" }, \"PlatformClients\": { \"FacebookMessenger\": { \"VerifyToken\": \"sample-verify-token\", \"AccessToken\": \"sample-access-token\" } } } Serilog Seq is recommended way of accessing logs! More details. Logging configuration. See more here: serilog configuration . AllowedHosts The host headers that are allowed to access the web pages. See here for more details. Database When AutomaticallyMigrate is set to true the database will be set up during the boot of application. Otherwise database setup with dotnet ef database update -p src/eru.Infrastrcuture -s src/eru.WebApp from root folder is required. Application uses Postgre DB. Use valid connection string! Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase Upload Key Key that will have to be provided in order to upload new substitutions. Culture Settings All input in this section must be a valid ISO language code. Available cultures shouldn't be changed unless you create a new translation for application. DefaultCulture can be set to on of AvailableCultures. Admins All provided here accounts will be able to access hangfire and admin dashboard. Paths WebAppBasePath sets the base path for the application. Read more here . NOTE: WebAppBasePath SHOULD MATCH reverse proxy path on proxy server (for instance, http://myproxyserver/eru should be a proxy to http://myeruserver/eru). If you're not using reverse proxy, you probably can leave it as in sample config. SeqUiPath is used by admin dashboard to provide easy access to logs. You should set it to address accessible outside the local network. PlatformClients Store for data used by Platform Clients. Facebook Messenger VerifyToken sets the verify token used by the Facebook Messenger Platform to verify a webhook. See more here . AccessToken is the authorization token used by the Facebook API and can be obtained in application panel. See how here .","title":"Config"},{"location":"config/#config","text":"Application configuration can be handled via many ways described here . Most common way to do it is via appsettings.json file available in src/eru.WebApp and it is our most recommended way of doing it.","title":"Config"},{"location":"config/#sample-appsettingsjson","text":"{ \"Serilog\" : { \"Using\" : [\"Serilog.Sinks.Console\", \"Serilog.Sinks.File\", \"Serilog.Sinks.Seq\"], \"MinimumLevel\" : { \"Default\": \"Information\" }, \"WriteTo\": [ {\"Name\" : \"Console\"}, {\"Name\" : \"File\", \"Args\" : {\"path\" : \"../Logs/log.txt\", \"rollingInterval\" : \"Day\"}}, {\"Name\" : \"Seq\", \"Args\" : {\"serverUrl\" : \"http://localhost:5341/\"}} ], \"Enrich\" : [\"FromLogContext\"] }, \"AllowedHosts\": \"*\", \"Database\": { \"AutomaticallyMigrate\": true, \"ConnectionString\": \"Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase;\" }, \"UploadKey\": \"V3ryS3cureUpl0adK3y\", \"CultureSettings\": { \"AvailableCultures\": [\"pl\", \"en\"], \"DefaultCulture\": \"pl\" }, \"Admins\" : [ { \"Username\" : \"admin\", \"Password\" : \"s@mpl3P@ssword\" } ], \"Paths\": { \"WebAppPathBase\": \"/\", \"SeqUiPath\": \"http://localhost:5341/\" }, \"PlatformClients\": { \"FacebookMessenger\": { \"VerifyToken\": \"sample-verify-token\", \"AccessToken\": \"sample-access-token\" } } }","title":"Sample appsettings.json"},{"location":"config/#serilog","text":"Seq is recommended way of accessing logs! More details. Logging configuration. See more here: serilog configuration .","title":"Serilog"},{"location":"config/#allowedhosts","text":"The host headers that are allowed to access the web pages. See here for more details.","title":"AllowedHosts"},{"location":"config/#database","text":"When AutomaticallyMigrate is set to true the database will be set up during the boot of application. Otherwise database setup with dotnet ef database update -p src/eru.Infrastrcuture -s src/eru.WebApp from root folder is required. Application uses Postgre DB. Use valid connection string! Host=myserver;Username=mylogin;Password=mypass;Database=mydatabase","title":"Database"},{"location":"config/#upload-key","text":"Key that will have to be provided in order to upload new substitutions.","title":"Upload Key"},{"location":"config/#culture-settings","text":"All input in this section must be a valid ISO language code. Available cultures shouldn't be changed unless you create a new translation for application. DefaultCulture can be set to on of AvailableCultures.","title":"Culture Settings"},{"location":"config/#admins","text":"All provided here accounts will be able to access hangfire and admin dashboard.","title":"Admins"},{"location":"config/#paths","text":"WebAppBasePath sets the base path for the application. Read more here . NOTE: WebAppBasePath SHOULD MATCH reverse proxy path on proxy server (for instance, http://myproxyserver/eru should be a proxy to http://myeruserver/eru). If you're not using reverse proxy, you probably can leave it as in sample config. SeqUiPath is used by admin dashboard to provide easy access to logs. You should set it to address accessible outside the local network.","title":"Paths"},{"location":"config/#platformclients","text":"Store for data used by Platform Clients.","title":"PlatformClients"},{"location":"config/#facebook-messenger","text":"VerifyToken sets the verify token used by the Facebook Messenger Platform to verify a webhook. See more here . AccessToken is the authorization token used by the Facebook API and can be obtained in application panel. See how here .","title":"Facebook Messenger"},{"location":"contribution/","text":"I want to help -> Contribution 101 You want to help? Great! Here are some ideas and tips how to get started. Create better upload page We're not a great frontend developers so we'll always gladly accept help in this matter. Here is how (from technical perspective and from point of view of person whose javascript skills aren't that great but at least it works) upload should look like. index.html <html> <head> <title>Simple uploader</title> </head> <body> <input type=\"file\" id=\"file-input\"> <button id=\"upload\">Upload</button> <script src=\"main.js\"></script> </body> </html> main.js document.getElementById('upload').onclick = upload; function upload() { const file = document.getElementById('file-input').files[0]; if (file) { var reader = new FileReader(); //AscSubstitution files are encoded with CP1250 so in order not to lose polish letters reading file with this encoding is required. reader.readAsText(file, \"CP1250\"); reader.onload = async function (evt) { //Remove first line with hard-coded CP-1250 encoding (VERY IMPORTANT!!!) let data = evt.target.result.replace(/[\\w\\W]+?\\n+?/,\"\"); await fetch('https://localhost:5001/substitutions', { method: 'POST', body: data, mode: 'cors', headers: { 'Content-Type': 'application/xml', 'Api-Key': document.getElementById('key').value } }).then(() => alert('SENT!')); } reader.onerror = function (evt) { document.getElementById(\"fileContents\").innerHTML = \"error reading file\"; } } }","title":"Contribution"},{"location":"contribution/#i-want-to-help-contribution-101","text":"You want to help? Great! Here are some ideas and tips how to get started.","title":"I want to help -&gt; Contribution 101"},{"location":"contribution/#create-better-upload-page","text":"We're not a great frontend developers so we'll always gladly accept help in this matter. Here is how (from technical perspective and from point of view of person whose javascript skills aren't that great but at least it works) upload should look like. index.html <html> <head> <title>Simple uploader</title> </head> <body> <input type=\"file\" id=\"file-input\"> <button id=\"upload\">Upload</button> <script src=\"main.js\"></script> </body> </html> main.js document.getElementById('upload').onclick = upload; function upload() { const file = document.getElementById('file-input').files[0]; if (file) { var reader = new FileReader(); //AscSubstitution files are encoded with CP1250 so in order not to lose polish letters reading file with this encoding is required. reader.readAsText(file, \"CP1250\"); reader.onload = async function (evt) { //Remove first line with hard-coded CP-1250 encoding (VERY IMPORTANT!!!) let data = evt.target.result.replace(/[\\w\\W]+?\\n+?/,\"\"); await fetch('https://localhost:5001/substitutions', { method: 'POST', body: data, mode: 'cors', headers: { 'Content-Type': 'application/xml', 'Api-Key': document.getElementById('key').value } }).then(() => alert('SENT!')); } reader.onerror = function (evt) { document.getElementById(\"fileContents\").innerHTML = \"error reading file\"; } } }","title":"Create better upload page"},{"location":"docker/","text":"Docker - setup and configuration All settings can be viewed in config page. Docker images Latest image is automatically built from master and can be run from image: ghcr.io/xxlo-devs/eru . Sample docker run docker run ghcr.io/xxlo-devs/eru Recommended setup with docker-compose We recommend setting up our app with docker-compose in order to quickly setup all required and useful services. REMEMBER to setup correct volumes binding NOT to lose data! sample docker-compose.yml version: '3.8' services: database: image: postgres restart: unless-stopped environment: POSTGRES_PASSWORD: s@mpl3P@ssword POSTGRES_USER: eru POSTGRES_DB: eru volumes: - database:/var/lib/postgresql/data nginx: image: nginx restart: unless-stopped ports: - 80:80 - 443:443 volumes: - nginx:/etc/nginx - letsencrypt:/etc/letsencrypt/ seq: image: datalust/seq restart: unless-stopped environment: ACCEPT_EULA: Y expose: - 80 volumes: - seq:/data eru: image: ghcr.io/xxlo-devs/eru restart: unless-stopped expose: - 80 environment: Serilog__WriteTo__1__Args__path: /logs/log.txt Serilog__WriteTo__2__Name: Seq Serilog__WriteTo__2__Args__serverUrl: http://seq Database__Type: postgresql Database__ConnectionString: Host=database;Username=eru;Password=s@mpl3P@ssword;Database=eru UploadKey: V3ryS3cureUpl0adK3y CultureSettings__DefaultCulture: pl Admins__0__Username: admin Admins__0__Password: s@mpl3P@ssword Paths__WebAppPathBase: / Paths__SeqUiPath: /seq PlatformClients__FacebookMessenger__VerifyToken: \"sample-verify-token\" PlatformClients__FacebookMessenger__AccessToken: \"sample-access-token\" volumes: - logs:/logs depends_on: - database - nginx - seq volumes: database: seq: logs: nginx: letsencrypt: Sample nginx default.conf with docker-compose server { listen 80; listen [::]:80; server_name localhost; error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } location / { proxy_pass http://eru/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location /seq/ { proxy_pass http://seq/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } }","title":"Docker"},{"location":"docker/#docker-setup-and-configuration","text":"All settings can be viewed in config page.","title":"Docker - setup and configuration"},{"location":"docker/#docker-images","text":"Latest image is automatically built from master and can be run from image: ghcr.io/xxlo-devs/eru .","title":"Docker images"},{"location":"docker/#sample-docker-run","text":"docker run ghcr.io/xxlo-devs/eru","title":"Sample docker run"},{"location":"docker/#recommended-setup-with-docker-compose","text":"We recommend setting up our app with docker-compose in order to quickly setup all required and useful services. REMEMBER to setup correct volumes binding NOT to lose data! sample docker-compose.yml version: '3.8' services: database: image: postgres restart: unless-stopped environment: POSTGRES_PASSWORD: s@mpl3P@ssword POSTGRES_USER: eru POSTGRES_DB: eru volumes: - database:/var/lib/postgresql/data nginx: image: nginx restart: unless-stopped ports: - 80:80 - 443:443 volumes: - nginx:/etc/nginx - letsencrypt:/etc/letsencrypt/ seq: image: datalust/seq restart: unless-stopped environment: ACCEPT_EULA: Y expose: - 80 volumes: - seq:/data eru: image: ghcr.io/xxlo-devs/eru restart: unless-stopped expose: - 80 environment: Serilog__WriteTo__1__Args__path: /logs/log.txt Serilog__WriteTo__2__Name: Seq Serilog__WriteTo__2__Args__serverUrl: http://seq Database__Type: postgresql Database__ConnectionString: Host=database;Username=eru;Password=s@mpl3P@ssword;Database=eru UploadKey: V3ryS3cureUpl0adK3y CultureSettings__DefaultCulture: pl Admins__0__Username: admin Admins__0__Password: s@mpl3P@ssword Paths__WebAppPathBase: / Paths__SeqUiPath: /seq PlatformClients__FacebookMessenger__VerifyToken: \"sample-verify-token\" PlatformClients__FacebookMessenger__AccessToken: \"sample-access-token\" volumes: - logs:/logs depends_on: - database - nginx - seq volumes: database: seq: logs: nginx: letsencrypt:","title":"Recommended setup with docker-compose"},{"location":"docker/#sample-nginx-defaultconf-with-docker-compose","text":"server { listen 80; listen [::]:80; server_name localhost; error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } location / { proxy_pass http://eru/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location /seq/ { proxy_pass http://seq/; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } }","title":"Sample nginx default.conf with docker-compose"},{"location":"messenger/facebook-messenger-open-beta-en/","text":"Facebook Messenger Open Beta How to participate & prerequisites Our prerequisites We are open for everybody who: Attends XX LO (Gdansk, Poland) Is willing to report every bug to the project maintainers Facebook prerequisites To register as a developer on Facebook you have to 'verify' your account. Facebook consider account as verified when (1) it has a valid & confirmed phone number or (2) it has a verified credit card. You can check whether you have a verified phone number here . This is what you should see after visiting this link. How to participate? Write to our maintainer and kindly ask for a tester invitation. Then, follow the instruction. We'll really appreciate everybody as a tester :) Create a Facebook Developer Account Head to Facebook for Developers website and click Get Started. Then, accept terms and conditions. You may be also asked for registration purpose (you can choose 'Other'). After this, you'll get the ability to join app as a tester :) Accept invitation to join testing team at eru If you are a registered developer at Facebook and our maintainer invited you to join our team, you need to accept this invitation. Go straight to https://developers.facebook.com/requests/. Accept the request by clicking accept. Voila! Now you can use the bot as a tester. Create a subscription To create a subscription, you need to write to our page called Eru. Grab a direct link and start now! Here just click 'Message'. Write 'hello' (or anything else) to start the conversation. Select your preferred language. If you will make a mistake and will need to change your data - click 'Cancel' and start registration again. Select your grade (1st, 2nd or 3rd). Select your section from the list. Remember that you can scroll the list using your fingers (swipe right or left to scroll). Confirm subscription & you're free to go! If you'll ever want to cancel the subscription (or registration), just click Cancel at any time.","title":"[EN] Open Beta"},{"location":"messenger/facebook-messenger-open-beta-en/#facebook-messenger-open-beta","text":"","title":"Facebook Messenger Open Beta"},{"location":"messenger/facebook-messenger-open-beta-en/#how-to-participate-prerequisites","text":"","title":"How to participate &amp; prerequisites"},{"location":"messenger/facebook-messenger-open-beta-en/#our-prerequisites","text":"We are open for everybody who: Attends XX LO (Gdansk, Poland) Is willing to report every bug to the project maintainers","title":"Our prerequisites"},{"location":"messenger/facebook-messenger-open-beta-en/#facebook-prerequisites","text":"To register as a developer on Facebook you have to 'verify' your account. Facebook consider account as verified when (1) it has a valid & confirmed phone number or (2) it has a verified credit card. You can check whether you have a verified phone number here . This is what you should see after visiting this link.","title":"Facebook prerequisites"},{"location":"messenger/facebook-messenger-open-beta-en/#how-to-participate","text":"Write to our maintainer and kindly ask for a tester invitation. Then, follow the instruction. We'll really appreciate everybody as a tester :)","title":"How to participate?"},{"location":"messenger/facebook-messenger-open-beta-en/#create-a-facebook-developer-account","text":"Head to Facebook for Developers website and click Get Started. Then, accept terms and conditions. You may be also asked for registration purpose (you can choose 'Other'). After this, you'll get the ability to join app as a tester :)","title":"Create a Facebook Developer Account"},{"location":"messenger/facebook-messenger-open-beta-en/#accept-invitation-to-join-testing-team-at-eru","text":"If you are a registered developer at Facebook and our maintainer invited you to join our team, you need to accept this invitation. Go straight to https://developers.facebook.com/requests/. Accept the request by clicking accept. Voila! Now you can use the bot as a tester.","title":"Accept invitation to join testing team at eru"},{"location":"messenger/facebook-messenger-open-beta-en/#create-a-subscription","text":"To create a subscription, you need to write to our page called Eru. Grab a direct link and start now! Here just click 'Message'. Write 'hello' (or anything else) to start the conversation. Select your preferred language. If you will make a mistake and will need to change your data - click 'Cancel' and start registration again. Select your grade (1st, 2nd or 3rd). Select your section from the list. Remember that you can scroll the list using your fingers (swipe right or left to scroll). Confirm subscription & you're free to go! If you'll ever want to cancel the subscription (or registration), just click Cancel at any time.","title":"Create a subscription"},{"location":"messenger/facebook-messenger-open-beta-pl/","text":"[PL] Facebook Messenger Open Beta Jak do\u0142\u0105czy\u0107 do bety Nasze wymagania Jeste\u015bmy otwarci dla ka\u017cdego, kto: Ucz\u0119szcza do XX LO (Gda\u0144sk, Polska) Obiecuje zg\u0142asza\u0107 ewentualne b\u0142\u0119dy do zesp\u00f3\u0142u Eru :) Wymagania Facebooka Aby zarejestrowa\u0107 si\u0119 jako deweloper na Facebooku, twoje konto musi by\u0107 'zweryfikowane'. Facebook uznaje konto za zweryfikowane gdy (1) posiada wa\u017cny i potwierdzony numer telefonu lub (2) posiada zweryfikowan\u0105 kart\u0119 p\u0142atnicz\u0105. Mo\u017cesz sprawdzi\u0107 czy masz zweryfikowany numer telefonu tutaj . Tak powinna wygl\u0105da\u0107 ta strona, gdy masz zweryfikowany numer. Jak zacz\u0105\u0107? Napisz do kogo\u015b z zespo\u0142u Eru i popro\u015b o dodanie jako tester do aplikacji. Ch\u0119tnie dodamy ka\u017cdego :) Utw\u00f3rz konto deweloperskie na Facebooku Wejd\u017a na stron\u0119 Facebook for Developers i kliknij 'Get Started'. Zaakceptuj warunki u\u017cytkowania. By\u0107 mo\u017ce zostaniesz r\u00f3wnie\u017c zosta\u0107 zapytany o cel rejestracji - mo\u017cesz wtedy wybra\u0107 opcj\u0119 'Other'. Od tego momentu masz aktywne konto developerskie na Facebooku :) Zaakceptuj zaproszenie do aplikacji Eru Je\u017celi masz ju\u017c konto deweloperskie i otrzyma\u0142e\u015b zaproszenie do zostania testerem, wejd\u017a na https://developers.facebook.com/requests/ w celu zaakceptowania go. Zaakceptuj zaproszenie klikaj\u0105c 'Confirm'. Voila! Od teraz mo\u017cesz u\u017cywa\u0107 bota jako tester. Zasubskrybuj powiadomienia o zast\u0119pstwach Aby za\u0142o\u017cy\u0107 subskrypcj\u0119, musisz napisa\u0107 do strony Eru. Link do Messengera Kliknij na przycisk by przej\u015b\u0107 do czatu. Napisz 'hello' (lub cokolwiek innego) by rozpocz\u0105\u0107 proces rejestracji. Wybierz j\u0119zyk. Je\u017celi pomylisz si\u0119 na dowolnym etapie - kliknij 'Anuluj' i rozpocznij proces rejestracji ponownie. Wybierz klas\u0119 do kt\u00f3rej chodzisz (pierwsza, druga lub trzecia). Wybierz oddzia\u0142 do kt\u00f3rego ucz\u0119szczasz. Pami\u0119taj, \u017ce lista jest przewijalna (po prostu przesu\u0144 palcem w lewo lub w prawo). Potwierd\u017a subskrypcj\u0119 i czekaj na powiadomienia ;) Je\u017celi b\u0119dziesz chcia\u0142 zrezygnowa\u0107 z subskrypcji (lub rejestracji) po prostu kliknij Anuluj na dowolnym etapie.","title":"[PL] Open Beta"},{"location":"messenger/facebook-messenger-open-beta-pl/#pl-facebook-messenger-open-beta","text":"","title":"[PL] Facebook Messenger Open Beta"},{"location":"messenger/facebook-messenger-open-beta-pl/#jak-doaczyc-do-bety","text":"","title":"Jak do\u0142\u0105czy\u0107 do bety"},{"location":"messenger/facebook-messenger-open-beta-pl/#nasze-wymagania","text":"Jeste\u015bmy otwarci dla ka\u017cdego, kto: Ucz\u0119szcza do XX LO (Gda\u0144sk, Polska) Obiecuje zg\u0142asza\u0107 ewentualne b\u0142\u0119dy do zesp\u00f3\u0142u Eru :)","title":"Nasze wymagania"},{"location":"messenger/facebook-messenger-open-beta-pl/#wymagania-facebooka","text":"Aby zarejestrowa\u0107 si\u0119 jako deweloper na Facebooku, twoje konto musi by\u0107 'zweryfikowane'. Facebook uznaje konto za zweryfikowane gdy (1) posiada wa\u017cny i potwierdzony numer telefonu lub (2) posiada zweryfikowan\u0105 kart\u0119 p\u0142atnicz\u0105. Mo\u017cesz sprawdzi\u0107 czy masz zweryfikowany numer telefonu tutaj . Tak powinna wygl\u0105da\u0107 ta strona, gdy masz zweryfikowany numer.","title":"Wymagania Facebooka"},{"location":"messenger/facebook-messenger-open-beta-pl/#jak-zaczac","text":"Napisz do kogo\u015b z zespo\u0142u Eru i popro\u015b o dodanie jako tester do aplikacji. Ch\u0119tnie dodamy ka\u017cdego :)","title":"Jak zacz\u0105\u0107?"},{"location":"messenger/facebook-messenger-open-beta-pl/#utworz-konto-deweloperskie-na-facebooku","text":"Wejd\u017a na stron\u0119 Facebook for Developers i kliknij 'Get Started'. Zaakceptuj warunki u\u017cytkowania. By\u0107 mo\u017ce zostaniesz r\u00f3wnie\u017c zosta\u0107 zapytany o cel rejestracji - mo\u017cesz wtedy wybra\u0107 opcj\u0119 'Other'. Od tego momentu masz aktywne konto developerskie na Facebooku :)","title":"Utw\u00f3rz konto deweloperskie na Facebooku"},{"location":"messenger/facebook-messenger-open-beta-pl/#zaakceptuj-zaproszenie-do-aplikacji-eru","text":"Je\u017celi masz ju\u017c konto deweloperskie i otrzyma\u0142e\u015b zaproszenie do zostania testerem, wejd\u017a na https://developers.facebook.com/requests/ w celu zaakceptowania go. Zaakceptuj zaproszenie klikaj\u0105c 'Confirm'. Voila! Od teraz mo\u017cesz u\u017cywa\u0107 bota jako tester.","title":"Zaakceptuj zaproszenie do aplikacji Eru"},{"location":"messenger/facebook-messenger-open-beta-pl/#zasubskrybuj-powiadomienia-o-zastepstwach","text":"Aby za\u0142o\u017cy\u0107 subskrypcj\u0119, musisz napisa\u0107 do strony Eru. Link do Messengera Kliknij na przycisk by przej\u015b\u0107 do czatu. Napisz 'hello' (lub cokolwiek innego) by rozpocz\u0105\u0107 proces rejestracji. Wybierz j\u0119zyk. Je\u017celi pomylisz si\u0119 na dowolnym etapie - kliknij 'Anuluj' i rozpocznij proces rejestracji ponownie. Wybierz klas\u0119 do kt\u00f3rej chodzisz (pierwsza, druga lub trzecia). Wybierz oddzia\u0142 do kt\u00f3rego ucz\u0119szczasz. Pami\u0119taj, \u017ce lista jest przewijalna (po prostu przesu\u0144 palcem w lewo lub w prawo). Potwierd\u017a subskrypcj\u0119 i czekaj na powiadomienia ;) Je\u017celi b\u0119dziesz chcia\u0142 zrezygnowa\u0107 z subskrypcji (lub rejestracji) po prostu kliknij Anuluj na dowolnym etapie.","title":"Zasubskrybuj powiadomienia o zast\u0119pstwach"},{"location":"messenger/what-about-release/","text":"[EN] What about release? [PL] Kiedy aplikacja zostanie wydana? [EN] What about release? Facebook Messenger requires every app to be verified by the Facebook team before released. We cannot guarantee any release date, but we will do everything we can to release this app as soon as possible. Don't forget also about Open Beta :) [PL] Kiedy aplikacja zostanie wydana? By bot by\u0142 publicznie dost\u0119pny na Facebooku, musimy przej\u015b\u0107 wielostopniow\u0105 weryfikacje. Nie mo\u017cemy poda\u0107 daty premiery, ale zrobimy wszystko co w naszej mocy \u017ceby odby\u0142a si\u0119 ona jak najszybciej. Dodatkowo zach\u0119camy wszystkich do uczestnictwa w otwartej becie :)","title":"[EN/PL] What about release"},{"location":"messenger/what-about-release/#en-what-about-release-pl-kiedy-aplikacja-zostanie-wydana","text":"","title":"[EN] What about release? [PL] Kiedy aplikacja zostanie wydana?"},{"location":"messenger/what-about-release/#en-what-about-release","text":"Facebook Messenger requires every app to be verified by the Facebook team before released. We cannot guarantee any release date, but we will do everything we can to release this app as soon as possible. Don't forget also about Open Beta :)","title":"[EN] What about release?"},{"location":"messenger/what-about-release/#pl-kiedy-aplikacja-zostanie-wydana","text":"By bot by\u0142 publicznie dost\u0119pny na Facebooku, musimy przej\u015b\u0107 wielostopniow\u0105 weryfikacje. Nie mo\u017cemy poda\u0107 daty premiery, ale zrobimy wszystko co w naszej mocy \u017ceby odby\u0142a si\u0119 ona jak najszybciej. Dodatkowo zach\u0119camy wszystkich do uczestnictwa w otwartej becie :)","title":"[PL] Kiedy aplikacja zostanie wydana?"}]}