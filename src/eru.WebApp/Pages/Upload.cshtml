@page
@using Microsoft.AspNetCore.Mvc.Localization

@{
    Layout = "_Layout";
}

@inject IViewLocalizer Localizer

@section AddToHead
{
    <title>@Localizer["title"]</title>
    <link rel="stylesheet" href="~/dist/upload.css" asp-append-version="true"/>
}

@section AddToScripts
{
    <script src="~/dist/upload.js" asp-append-version="true"></script>
    <script>
    'use strict'
    
    function displayFileName() {
        document.getElementById('file-name').textContent = String(document.querySelector('#file-input').value).split('\\').reverse()[0];
    }
    
    function cancel() {
        document.getElementById('file-name').textContent = "";
        document.getElementById('file-input').value = null;
        document.getElementById('key-input').value = "";
    }
    
    function submit() {
        const file = document.getElementById('file-input').files[0];
        if (file) {
            const reader = new FileReader();
            reader.readAsText(file, 'CP1250');
            reader.onload = async function(evt) {
                const data = evt.target.result.replace(/[\w\W]+?\n+?/, "");
                await fetch('/substitutions', {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/xml',
                        'Api-Key': document.getElementById('key-input').value
                    }
                }).then(response => {
                    cancel();
                    if (response.ok) {
                        addNotification('@Localizer["upload-succeed"]', ['is-success']);
                    } else {
                        response.json().then(json => {
                            let errors = [];
                            for (const property in json.errors) {
                                if (json.errors.hasOwnProperty(property)) {
                                    errors = errors.concat(json.errors[property]);
                                }
                            }
                            addNotification(`${json.title} (${errors.join(' ')})`, ['is-danger'])
                        });
                    }
                });
            }
        }
    }
    
    function addNotification(content, classes) {
        let notification = document.createElement('div');
        notification.classList.add('notification');
        classes.forEach(c => notification.classList.add(c));
        let closeButton = document.createElement('button');
        closeButton.classList.add('delete');
        closeButton.onclick = function() {
            notification.parentNode.removeChild(notification);
        };
        notification.append(closeButton);
        notification.append(content);
        document.getElementById('form-container').prepend(notification);
    }
    </script>
}

<svg class="chroma" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
    <path fill="#ff5500" fill-opacity="1" d="M0,192L180,288L360,192L540,192L720,256L900,160L1080,288L1260,64L1440,224L1440,0L1260,0L1080,0L900,0L720,0L540,0L360,0L180,0L0,0Z"></path>
</svg>
<div id="wrapper">
    <section class="hero">
        <div class="container is-half">
            <h1 class="is-size-1 title animate__animated animate__lightSpeedInRight">@Localizer["title"]</h1>
        </div>
    </section>
    <section id="form-container" class="section">
        <div class="container">
            <div class="field">
                <label class="label">@Localizer["api-key"]</label>
                <div class="control has-icons-left">
                    <span class="icon is-small is-left">
                        <box-icon name="lock-alt"></box-icon>
                    </span>
                    <input id="key-input" class="input" type="password" placeholder="@Localizer["api-key"]"/>
                </div>
            </div>
            <div class="field">
                <label class="label">@Localizer["file"]</label>
                <div class="file has-name is-fullwidth">
                    <label class="file-label">
                        <input id="file-input" onchange="displayFileName()" class="file-input" type="file" name="substitutions" accept="application/xml"/>
                        <span class="file-cta">
                            <span class="file-icon">
                                <box-icon name="cloud-upload"></box-icon>
                            </span>
                            <span class="file-label">
                                @Localizer["choose-file"]
                            </span>
                        </span>
                        <span id="file-name" class="file-name"></span>
                    </label>
                </div>
            </div>
            <div class="field is-grouped">
                <div class="control">
                    <button id="submit-button" onclick="submit()" class="button">@Localizer["submit"]</button>
                </div>
                <div class="control">
                    <button id="cancel-button" onclick="cancel()" class="button is-light">@Localizer["cancel"]</button>
                </div>
            </div>
        </div>
    </section>
</div>